trigger:
  branches:
    include:
      - main
  paths:
    include:
      - auth-api/*

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: dev-variables

stages:
- stage: Build
  displayName: 'Build Auth API'
  jobs:
  - job: Build
    displayName: 'Build and Push'
    steps:
    - task: GoTool@0
      inputs:
        version: '1.18'
      displayName: 'Install Go'

    - script: |
        # Configurar GOPATH y crear directorios necesarios
        export GOPATH=/home/vsts/go
        export GOBIN=$GOPATH/bin
        mkdir -p $GOBIN
        export PATH=$PATH:$GOBIN

        # Instalar dep primero
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        
        # Verificar que dep se instaló
        which dep
        dep version

        # Crear estructura de directorios y copiar código
        mkdir -p $GOPATH/src/auth-api
        cp -r auth-api/* $GOPATH/src/auth-api/
        
        # Entrar al directorio y ejecutar dep ensure
        cd $GOPATH/src/auth-api
        dep ensure -v
        
        # Construir la aplicación
        GO111MODULE=off go build -v
        
        # Copiar el binario de vuelta
        cp auth-api /home/vsts/work/1/s/auth-api/
      displayName: 'Build Go App'

    - task: Docker@2
      inputs:
        containerRegistry: acr-connection
        repository: auth-api
        command: buildAndPush
        Dockerfile: auth-api/Dockerfile
        tags: |
          $(Build.BuildId)
          latest

- stage: Deploy
  displayName: 'Deploy Auth API'
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: 'Deploy to AKS'
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'k8s-dev-connection'
        namespace: 'dev'
        command: 'apply'
        arguments: '-f auth-api/k8s/dev/deployment.yaml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
        dockerRegistryEndpoint: 'acr-connection'
